function GCD(a, b) {
  return b === 0 ? a : GCD(b, a % b);
}

console.log(GCD(7, 14));
// 정의우선계산법
// gcd(206, 40) -> 40 === 0 ? 206 : gcd(40, 206 % 40) 1번
// gcd(40, 206%40) -> 206 % 40 === 0 ? 40 : gcd(206 % 40, 40 % (206%40)) 2번
// gcd(206 % 40, 40 % (206 % 40)) -> ...4번
// gcd(40 % (206 % 40), (206 % 40) % (40 % (206 % 40))) -> ...7번
// gcd((206 % 40) % (40 % (206 % 40)), (40 % (206 % 40)) % ((206 % 40) % (40 % (206 % 40)))
// 정의대로 계산법은 기저까지 쭉 식을 나열한 후 다시 되돌아가며 연산함. b자리에 a%b로 계속해서 들어가면서 계산.
// 4번째 단계까지 펼치면 b가 0임을 만족하여 a만 반환. 그 때, a를 계산하기 위한 나머지 연산이 4번쓰여서
// 총 1 + 2 + 4 + 7 + 4 = 18번 나머지연산을 쓴다

// 인자우선계산법
// gcd(206, 40) -> 206 % 40 = 6
// gcd(40, 6) -> 40 % 6 = 4
// gcd(6, 4) -> 6 % 4 = 2
// gcd(4, 2) -> 4 % 2 = 0
// gcd(2, 0) => 4번
